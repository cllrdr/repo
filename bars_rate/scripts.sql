-- insert to user_points
TRUNCATE bar_rate.user_points;
COPY bar_rate.user_points(id, quality, assortment, atmosphere, food, queues)
FROM '/home/aach/repo/user_points.csv' 
DELIMITER ',' CSV HEADER;


CREATE TABLE if not exists bar_rate.category_values (
	id int4 NOT NULL,
	quality int2 NOT NULL,
	assortment int2 NOT NULL,
	atmosphere int2 NOT NULL,
	food int2 NOT NULL,
	queues int2 NOT NULL,
	CONSTRAINT cv_pkey PRIMARY KEY (id)
);

CREATE TABLE if not exists bar_rate.user_values (
	id int4 NOT NULL,
	quality int2 NOT NULL,
	assortment int2 NOT NULL,
	atmosphere int2 NOT NULL,
	food int2 NOT NULL,
	queues int2 NOT NULL,
	CONSTRAINT uv_pkey PRIMARY KEY (id)
);

CREATE TABLE if not exists bar_rate.bar_info (
	id int4 NOT NULL,
	name varchar(50) NOT NULL,
	coordinates point NOT NULL,
	info text,
	CONSTRAINT bi_pkey PRIMARY KEY (id)
);

-- Шаг 1: Удаляем существующее ограничение первичного ключа (если есть)
ALTER TABLE bar_rate.bar_info DROP CONSTRAINT bi_pkey;

-- Шаг 2: Изменяем столбец на автоинкремент
ALTER TABLE bar_rate.bar_info 
ALTER COLUMN id SET DATA TYPE int4,
ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY;

-- Шаг 3: Восстанавливаем первичный ключ
ALTER TABLE bar_rate.bar_info ADD CONSTRAINT bi_pkey PRIMARY KEY (id);



COPY bar_rate.bar_info(name, coordinates, info, cat_id)
FROM '/home/aach/repo/data.csv' 
DELIMITER ',' CSV HEADER;